name: Test and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-action:
    name: Run security check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run security check
        id: security-check
        uses: ./
        continue-on-error: true  # テスト時はエラーでも続行
        with:
          target: '.'
          severity: 'LOW'        # テスト時は閾値を下げる
          html-output: 'reports'
          fail-on-severity: 'CRITICAL'  # クリティカルな問題のみで失敗
      
      - name: Upload security reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: reports/
          retention-days: 7
          if-no-files-found: warn

  auto-tag:
    name: Create Auto Tag
    needs: test-action
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get latest tag
        id: get_latest_tag
        run: |
          git fetch --tags
          LATEST_TAG=$(git tag | grep '^v[0-9]*\.[0-9]*\.[0-9]*$' | sort -V | tail -n 1)
          if [ -z "$LATEST_TAG" ]; then
            echo "version=v1.0.0" >> $GITHUB_OUTPUT
          else
            MAJOR=$(echo $LATEST_TAG | cut -d. -f1)
            MINOR=$(echo $LATEST_TAG | cut -d. -f2)
            PATCH=$(echo $LATEST_TAG | cut -d. -f3)
            PATCH=$((PATCH + 1))
            echo "version=${MAJOR}.${MINOR}.${PATCH}" >> $GITHUB_OUTPUT
          fi
          echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      
      - name: Create tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a ${{ steps.get_latest_tag.outputs.version }} -m "🔖 バージョン ${{ steps.get_latest_tag.outputs.version }} (${{ steps.get_latest_tag.outputs.date }})

          自動生成されたリリースタグ"
          git push origin ${{ steps.get_latest_tag.outputs.version }}

  create-release:
    name: Create Release
    needs: auto-tag
    if: |
      github.event_name == 'push' && (
        github.ref == 'refs/heads/main' ||
        startsWith(github.ref, 'refs/tags/v')
      )
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get version from tag
        id: get_version
        run: |
          if [[ ${{ github.ref }} == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=${{ needs.auto-tag.outputs.version }}
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      
      - name: Download security reports
        uses: actions/download-artifact@v4
        with:
          name: security-reports
          path: reports/
      
      - name: Get Changelog Entry
        id: changelog
        run: |
          CHANGELOG=$(sed -n "/### ${VERSION}/,/###/p" README.md | sed '$d' | sed '1d')
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Version ${{ steps.get_version.outputs.VERSION }} - リリース ${{ steps.get_version.outputs.DATE }}
          body: |
            ## 🎉 ${{ steps.get_version.outputs.VERSION }} リリース (${{ steps.get_version.outputs.DATE }})
            
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ### 📦 アーティファクト
            - セキュリティチェックレポートは、このリリースに添付されています。
            
            ### 🔍 注意事項
            - このリリースは自動生成されています。
            - 詳細な変更履歴は README.md を参照してください。
          draft: false
          prerelease: false
          files: |
            reports/*
